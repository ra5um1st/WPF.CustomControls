<Window x:Class="WPF_Timeline.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Timeline"
        xmlns:custom="clr-namespace:WPF_Timeline.Timeline" 
        xmlns:converters="clr-namespace:WPF_Timeline.Converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <converters:DateTimeToTimeSpanConverter x:Key="DateTimeToTimeSpanConverter"/>
        <converters:TimeSpanInterpolationConverter x:Key="TimeSpanInterpolationConverter"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Header="Задача 1" Grid.Column="0">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding Header, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GroupBox}}" FontWeight="Bold"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>

                    <Grid Grid.IsSharedSizeScope="True" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <!--Выбор начала первой задачи-->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Начало" Grid.Column="0" VerticalAlignment="Center" Margin="5"/>
                            <TextBox Grid.Column="1" VerticalAlignment="Center" Text="00:00:10" x:Name="DTP_task1StartDate" TextAlignment="Right"/>
                        </Grid>

                        <!--Выбор окончания первой задачи-->
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Окончание" Grid.Column="0" VerticalAlignment="Center" Margin="5"/>
                            <TextBox Grid.Column="1" VerticalAlignment="Center" Text="00:01:25" x:Name="DTP_task1FinishDate" TextAlignment="Right"/>
                        </Grid>
                    </Grid>
                </GroupBox>

                <GroupBox Header="Задача 2" Grid.Column="1">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding Header, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GroupBox}}" FontWeight="Bold"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>

                    <Grid Grid.IsSharedSizeScope="True" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <!--Выбор начала второй задачи-->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Начало" Grid.Column="0" VerticalAlignment="Center" Margin="5"/>
                            <TextBox Grid.Column="1" VerticalAlignment="Center" Text="00:01:11" x:Name="DTP_task2StartDate" TextAlignment="Right"/>
                        </Grid>

                        <!--Выбор окончания второй задачи-->
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Окончание" Grid.Column="0" VerticalAlignment="Center" Margin="5"/>
                            <TextBox Grid.Column="1" VerticalAlignment="Center" Text="00:02:59" x:Name="DTP_task2FinishDate" TextAlignment="Right"/>
                        </Grid>
                    </Grid>
                </GroupBox>

                <GroupBox Header="Параметры таймлайна" Grid.Column="2">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding Header, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GroupBox}}" FontWeight="Bold"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>

                    <Grid Grid.IsSharedSizeScope="True" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <!--Выбор ширины временного интервала-->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="150"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Ширина временного интервала" Grid.Column="0" Margin="5"/>
                            <StackPanel Grid.Column="1">
                                <Slider 
                                    VerticalAlignment="Center"
                                    Minimum="{Binding MinIntervalWidth, ElementName=timelineControl}" 
                                    Maximum="{Binding MaxIntervalWidth, ElementName=timelineControl}"
                                    x:Name="SL_IntervalWidth"/>
                                <TextBlock Text="{Binding Value, ElementName=SL_IntervalWidth}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </StackPanel>

                        </Grid>

                        <!--Выбор временного интервала-->
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="150"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Временной интервал" Grid.Column="0" Margin="5"/>
                            <StackPanel Grid.Column="1">
                                <Slider VerticalAlignment="Center" Minimum="0" Maximum="1" x:Name="SL_IntervalTimeSpan"/>
                                <TextBlock Text="{Binding IntervalTimeSpan, ElementName=timelineControl, StringFormat='hh\\:mm\\:ss'}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </Grid>

                        <!--Выбор минимального времени таймлайна-->
                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Минимальное время таймлайна" Grid.Column="0" Margin="5"/>
                            <TextBox VerticalAlignment="Center" Text="00:00:00" x:Name="TB_MinTimeSpan" Grid.Column="1" Margin="5" TextAlignment="Right"/>
                        </Grid>

                        <!--Выбор максимального времени таймлайна-->
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="Title"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Максимальное время таймлайна" Grid.Column="0" Margin="5"/>
                            <TextBox VerticalAlignment="Center" Text="01:00:00" x:Name="TB_MaxTimeSpan" Grid.Column="1" Margin="5" TextAlignment="Right"/>
                        </Grid>
                    </Grid>
                </GroupBox>
            </Grid>
        </ScrollViewer>

        <custom:TimelineControl
            x:Name="timelineControl"
            Grid.ColumnSpan="99"
            MinIntervalTimeSpan="00:00:01"
            MaxIntervalTimeSpan="00:05:00"
            IntervalWidth="{Binding Value, ElementName=SL_IntervalWidth, Mode=TwoWay}"
            MinTimeSpan="{Binding Text, ElementName=TB_MinTimeSpan, Mode=TwoWay}" 
            MaxTimeSpan="{Binding Text, ElementName=TB_MaxTimeSpan, Mode=TwoWay}"
            MaxIntervalWidth="250"
            PreviewMouseWheel="OnTimelineControlMouseWheelMoved"
            Grid.Row="1"
            UseLayoutRounding="True"
            SnapsToDevicePixels="True"
            Background="WhiteSmoke">
            <custom:TimelineControl.IntervalTimeSpan>
                <Binding Path="Value" Mode="TwoWay" ElementName="SL_IntervalTimeSpan" Converter="{StaticResource TimeSpanInterpolationConverter}">
                    <Binding.ConverterParameter>
                        <x:Array Type="sys:TimeSpan">
                            <sys:TimeSpan>00:00:01</sys:TimeSpan>
                            <sys:TimeSpan>00:05:00</sys:TimeSpan>
                        </x:Array>
                    </Binding.ConverterParameter>
                </Binding>
            </custom:TimelineControl.IntervalTimeSpan>

            <!--<custom:TimelinePanel
                IntervalWidth="{Binding Value, ElementName=SL_IntervalWidth, Mode=TwoWay}"
                MinTimeSpan="{Binding Text, ElementName=TB_MinTimeSpan, Mode=TwoWay}" 
                MaxTimeSpan="{Binding Text, ElementName=TB_MaxTimeSpan, Mode=TwoWay}" 
                IntervalTimeSpan="{Binding IntervalTimeSpan, ElementName=timelineControl}">
                <Border 
                    Background="LightGray" 
                    CornerRadius="5" 
                    custom:TimelinePanel.StartTimeSpan="{Binding Text, ElementName=DTP_task1StartDate, Mode=TwoWay, StringFormat='hh\\:mm\\:ss'}" 
                    custom:TimelinePanel.FinishTimeSpan="{Binding Text, ElementName=DTP_task1FinishDate, Mode=TwoWay, StringFormat='hh\\:mm\\:ss'}"
                    MouseMove="OnTimelinePanelChildMouseMove"
                    MouseDown="OnTimelinePanelChildMouseDown"
                    MouseUp="OnTimelinePanelChildMouseUp">
                    <ContentControl Content="Задача 1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Border>
                <Border 
                    Background="Gray" 
                    CornerRadius="5" 
                    custom:TimelinePanel.StartTimeSpan="{Binding Text, ElementName=DTP_task2StartDate, Mode=TwoWay, StringFormat='hh\\:mm\\:ss'}" 
                    custom:TimelinePanel.FinishTimeSpan="{Binding Text, ElementName=DTP_task2FinishDate, Mode=TwoWay, StringFormat='hh\\:mm\\:ss'}"
                    MouseMove="OnTimelinePanelChildMouseMove"
                    MouseDown="OnTimelinePanelChildMouseDown"
                    MouseUp="OnTimelinePanelChildMouseUp">
                    <ContentControl Content="Задача 2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Border>
            </custom:TimelinePanel>-->
            <ListBox Style="{DynamicResource ListBoxStyle1}" Background="Transparent" Padding="0">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBoxItem Style="{DynamicResource ListBoxItemStyle1}">
                    <custom:TimelinePanel
                        IntervalWidth="{Binding IntervalWidth, ElementName=timelineControl}"
                        MinTimeSpan="{Binding Text, ElementName=TB_MinTimeSpan, Mode=TwoWay}" 
                        MaxTimeSpan="{Binding Text, ElementName=TB_MaxTimeSpan, Mode=TwoWay}" 
                        IntervalTimeSpan="{Binding IntervalTimeSpan, ElementName=timelineControl}">
                        <Border
                            Background="LightGray"
                            CornerRadius="0"
                            Padding="10"
                            Margin="0 15 0 15"
                            custom:TimelinePanel.StartTimeSpan="{Binding Text, ElementName=DTP_task1StartDate, Mode=TwoWay, FallbackValue='00:00:00'}" 
                            custom:TimelinePanel.FinishTimeSpan="{Binding Text, ElementName=DTP_task1FinishDate, Mode=TwoWay, FallbackValue='00:01:25'}"
                            MouseMove="OnTimelinePanelChildMouseMove"
                            MouseLeftButtonDown="OnTimelinePanelChildMouseDown"
                            MouseUp="OnTimelinePanelChildMouseUp">
                            <ContentControl Content="Задача 1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </custom:TimelinePanel>
                </ListBoxItem>
                <ListBoxItem Style="{DynamicResource ListBoxItemStyle1}">
                    <custom:TimelinePanel
                        IntervalWidth="{Binding IntervalWidth, ElementName=timelineControl}"
                        MinTimeSpan="{Binding Text, ElementName=TB_MinTimeSpan, Mode=TwoWay}" 
                        MaxTimeSpan="{Binding Text, ElementName=TB_MaxTimeSpan, Mode=TwoWay}" 
                        IntervalTimeSpan="{Binding IntervalTimeSpan, ElementName=timelineControl}">
                        <Border
                            Background="OrangeRed"
                            CornerRadius="0"
                            Padding="10"
                            Margin="0 15 0 15"
                            custom:TimelinePanel.StartTimeSpan="00:03:00" 
                            custom:TimelinePanel.FinishTimeSpan="00:06:00"
                            MouseMove="OnTimelinePanelChildMouseMove"
                            MouseLeftButtonDown="OnTimelinePanelChildMouseDown"
                            MouseUp="OnTimelinePanelChildMouseUp">
                            <ContentControl Content="Задача 2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </custom:TimelinePanel>
                </ListBoxItem>
                <ListBoxItem Style="{DynamicResource ListBoxItemStyle1}">
                    <custom:TimelinePanel
                        IntervalWidth="{Binding IntervalWidth, ElementName=timelineControl}"
                        MinTimeSpan="{Binding Text, ElementName=TB_MinTimeSpan, Mode=TwoWay}" 
                        MaxTimeSpan="{Binding Text, ElementName=TB_MaxTimeSpan, Mode=TwoWay}" 
                        IntervalTimeSpan="{Binding IntervalTimeSpan, ElementName=timelineControl}">
                        <Border
                            Background="Salmon"
                            CornerRadius="0"
                            Padding="10"
                            Margin="0 15 0 15"
                            custom:TimelinePanel.StartTimeSpan="00:01:00" 
                            custom:TimelinePanel.FinishTimeSpan="00:02:00"
                            MouseMove="OnTimelinePanelChildMouseMove"
                            MouseLeftButtonDown="OnTimelinePanelChildMouseDown"
                            MouseUp="OnTimelinePanelChildMouseUp">
                            <ContentControl Content="Задача 3" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </custom:TimelinePanel>
                </ListBoxItem>

            </ListBox>
        </custom:TimelineControl>
    </Grid>
</Window>
